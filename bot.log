2025-03-29 19:16:11,178 - INFO - Bot started.
2025-03-29 19:16:11,208 - DEBUG - Set Bot API URL: https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto
2025-03-29 19:16:11,208 - DEBUG - Set Bot API File URL: https://api.telegram.org/file/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto
2025-03-29 19:16:11,209 - DEBUG - Using selector: KqueueSelector
2025-03-29 19:16:11,209 - DEBUG - Network Retry Loop (Bootstrap Initialize Application): Starting
2025-03-29 19:16:11,209 - DEBUG - Calling Bot API endpoint `getMe` with parameters `{}`
2025-03-29 19:16:11,211 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:16:11,251 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x10361d010>
2025-03-29 19:16:11,251 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1034ca8d0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:16:11,380 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x1035ba850>
2025-03-29 19:16:11,381 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:11,381 - DEBUG - send_request_headers.complete
2025-03-29 19:16:11,381 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:11,381 - DEBUG - send_request_body.complete
2025-03-29 19:16:11,381 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:11,446 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'260'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:11,446 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getMe "HTTP/1.1 200 OK"
2025-03-29 19:16:11,446 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:11,446 - DEBUG - receive_response_body.complete
2025-03-29 19:16:11,446 - DEBUG - response_closed.started
2025-03-29 19:16:11,446 - DEBUG - response_closed.complete
2025-03-29 19:16:11,447 - DEBUG - Call to Bot API endpoint `getMe` finished with return value `{'id': 8064160693, 'is_bot': True, 'first_name': 'Lashes__butovo', 'username': 'LashesButovo_bot', 'can_join_groups': True, 'can_read_all_group_messages': False, 'supports_inline_queries': False, 'can_connect_to_business': False, 'has_main_web_app': False}`
2025-03-29 19:16:11,447 - DEBUG - This Bot is already initialized.
2025-03-29 19:16:11,447 - DEBUG - Updater started (polling)
2025-03-29 19:16:11,447 - DEBUG - Network Retry Loop (Bootstrap delete Webhook): Starting
2025-03-29 19:16:11,447 - DEBUG - Deleting webhook
2025-03-29 19:16:11,447 - DEBUG - Calling Bot API endpoint `deleteWebhook` with parameters `{}`
2025-03-29 19:16:11,447 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:11,447 - DEBUG - send_request_headers.complete
2025-03-29 19:16:11,447 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:11,447 - DEBUG - send_request_body.complete
2025-03-29 19:16:11,447 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:11,832 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'68'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:11,832 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/deleteWebhook "HTTP/1.1 200 OK"
2025-03-29 19:16:11,833 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:11,833 - DEBUG - receive_response_body.complete
2025-03-29 19:16:11,833 - DEBUG - response_closed.started
2025-03-29 19:16:11,834 - DEBUG - response_closed.complete
2025-03-29 19:16:11,834 - DEBUG - Call to Bot API endpoint `deleteWebhook` finished with return value `True`
2025-03-29 19:16:11,835 - DEBUG - Bootstrap done
2025-03-29 19:16:11,835 - DEBUG - Waiting for polling to start
2025-03-29 19:16:11,835 - DEBUG - Polling updates from Telegram started
2025-03-29 19:16:11,835 - DEBUG - Network Retry Loop (Polling Updates): Starting
2025-03-29 19:16:11,836 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 0}`
2025-03-29 19:16:11,837 - INFO - Application started
2025-03-29 19:16:11,837 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:16:11,840 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x103644b90>
2025-03-29 19:16:11,840 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1034cacc0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:16:11,994 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x103552fd0>
2025-03-29 19:16:11,995 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:11,996 - DEBUG - send_request_headers.complete
2025-03-29 19:16:11,996 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:11,996 - DEBUG - send_request_body.complete
2025-03-29 19:16:11,997 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:22,156 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'23'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:22,157 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getUpdates "HTTP/1.1 200 OK"
2025-03-29 19:16:22,157 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:22,157 - DEBUG - receive_response_body.complete
2025-03-29 19:16:22,157 - DEBUG - response_closed.started
2025-03-29 19:16:22,157 - DEBUG - response_closed.complete
2025-03-29 19:16:22,157 - DEBUG - Call to Bot API endpoint `getUpdates` finished with return value `[]`
2025-03-29 19:16:22,157 - DEBUG - No new updates found.
2025-03-29 19:16:22,157 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 0}`
2025-03-29 19:16:22,158 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:22,158 - DEBUG - send_request_headers.complete
2025-03-29 19:16:22,158 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:22,158 - DEBUG - send_request_body.complete
2025-03-29 19:16:22,158 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:30,888 - DEBUG - Application received stop signal. Shutting down.
2025-03-29 19:16:30,889 - DEBUG - Stopping Updater
2025-03-29 19:16:30,889 - DEBUG - Waiting background polling task to finish up.
2025-03-29 19:16:30,890 - DEBUG - Network Retry Loop (Polling Updates): Cancelled
2025-03-29 19:16:30,890 - DEBUG - receive_response_headers.failed exception=CancelledError()
2025-03-29 19:16:30,890 - DEBUG - response_closed.started
2025-03-29 19:16:30,890 - DEBUG - Calling `get_updates` one more time to mark all fetched updates as read.
2025-03-29 19:16:30,890 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 0, 'offset': 0}`
2025-03-29 19:16:30,891 - DEBUG - response_closed.complete
2025-03-29 19:16:30,891 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:16:30,894 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x103615220>
2025-03-29 19:16:30,894 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1034cacc0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:16:31,037 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x1035a20f0>
2025-03-29 19:16:31,038 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:31,039 - DEBUG - send_request_headers.complete
2025-03-29 19:16:31,039 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:31,040 - DEBUG - send_request_body.complete
2025-03-29 19:16:31,040 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:31,109 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'23'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:31,110 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getUpdates "HTTP/1.1 200 OK"
2025-03-29 19:16:31,110 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:31,110 - DEBUG - receive_response_body.complete
2025-03-29 19:16:31,111 - DEBUG - response_closed.started
2025-03-29 19:16:31,111 - DEBUG - response_closed.complete
2025-03-29 19:16:31,112 - DEBUG - Call to Bot API endpoint `getUpdates` finished with return value `[]`
2025-03-29 19:16:31,112 - DEBUG - No new updates found.
2025-03-29 19:16:31,112 - DEBUG - Updater.stop() is complete
2025-03-29 19:16:31,112 - INFO - Application is stopping. This might take a moment.
2025-03-29 19:16:31,113 - DEBUG - Waiting for update_queue to join
2025-03-29 19:16:31,113 - DEBUG - Application stopped fetching of updates.
2025-03-29 19:16:31,113 - DEBUG - Waiting for `create_task` calls to be processed
2025-03-29 19:16:31,113 - INFO - Application.stop() complete
2025-03-29 19:16:31,114 - DEBUG - close.started
2025-03-29 19:16:31,114 - DEBUG - close.started
2025-03-29 19:16:31,115 - DEBUG - close.complete
2025-03-29 19:16:31,115 - DEBUG - close.complete
2025-03-29 19:16:31,115 - DEBUG - This Bot is already shut down. Returning.
2025-03-29 19:16:31,116 - DEBUG - Shut down of Updater complete
2025-03-29 19:16:32,392 - INFO - Bot started.
2025-03-29 19:16:32,414 - DEBUG - Set Bot API URL: https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto
2025-03-29 19:16:32,414 - DEBUG - Set Bot API File URL: https://api.telegram.org/file/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto
2025-03-29 19:16:32,415 - DEBUG - Using selector: KqueueSelector
2025-03-29 19:16:32,415 - DEBUG - Network Retry Loop (Bootstrap Initialize Application): Starting
2025-03-29 19:16:32,415 - DEBUG - Calling Bot API endpoint `getMe` with parameters `{}`
2025-03-29 19:16:32,417 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:16:32,419 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x102fb5010>
2025-03-29 19:16:32,420 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x102e628d0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:16:32,565 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x102f56850>
2025-03-29 19:16:32,565 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:32,566 - DEBUG - send_request_headers.complete
2025-03-29 19:16:32,566 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:32,566 - DEBUG - send_request_body.complete
2025-03-29 19:16:32,566 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:32,637 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'260'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:32,637 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getMe "HTTP/1.1 200 OK"
2025-03-29 19:16:32,638 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:32,638 - DEBUG - receive_response_body.complete
2025-03-29 19:16:32,638 - DEBUG - response_closed.started
2025-03-29 19:16:32,638 - DEBUG - response_closed.complete
2025-03-29 19:16:32,638 - DEBUG - Call to Bot API endpoint `getMe` finished with return value `{'id': 8064160693, 'is_bot': True, 'first_name': 'Lashes__butovo', 'username': 'LashesButovo_bot', 'can_join_groups': True, 'can_read_all_group_messages': False, 'supports_inline_queries': False, 'can_connect_to_business': False, 'has_main_web_app': False}`
2025-03-29 19:16:32,638 - DEBUG - This Bot is already initialized.
2025-03-29 19:16:32,638 - DEBUG - Updater started (polling)
2025-03-29 19:16:32,638 - DEBUG - Network Retry Loop (Bootstrap delete Webhook): Starting
2025-03-29 19:16:32,638 - DEBUG - Deleting webhook
2025-03-29 19:16:32,638 - DEBUG - Calling Bot API endpoint `deleteWebhook` with parameters `{}`
2025-03-29 19:16:32,639 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:32,639 - DEBUG - send_request_headers.complete
2025-03-29 19:16:32,639 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:32,639 - DEBUG - send_request_body.complete
2025-03-29 19:16:32,639 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:32,710 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'68'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:32,710 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/deleteWebhook "HTTP/1.1 200 OK"
2025-03-29 19:16:32,711 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:32,711 - DEBUG - receive_response_body.complete
2025-03-29 19:16:32,711 - DEBUG - response_closed.started
2025-03-29 19:16:32,711 - DEBUG - response_closed.complete
2025-03-29 19:16:32,711 - DEBUG - Call to Bot API endpoint `deleteWebhook` finished with return value `True`
2025-03-29 19:16:32,711 - DEBUG - Bootstrap done
2025-03-29 19:16:32,711 - DEBUG - Waiting for polling to start
2025-03-29 19:16:32,711 - DEBUG - Polling updates from Telegram started
2025-03-29 19:16:32,711 - DEBUG - Network Retry Loop (Polling Updates): Starting
2025-03-29 19:16:32,711 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 0}`
2025-03-29 19:16:32,712 - INFO - Application started
2025-03-29 19:16:32,712 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:16:32,714 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x102fdcb90>
2025-03-29 19:16:32,714 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x102e62cc0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:16:32,852 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x102eeafd0>
2025-03-29 19:16:32,853 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:32,853 - DEBUG - send_request_headers.complete
2025-03-29 19:16:32,853 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:32,854 - DEBUG - send_request_body.complete
2025-03-29 19:16:32,854 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:36,291 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'598'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:36,293 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getUpdates "HTTP/1.1 200 OK"
2025-03-29 19:16:36,293 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:36,294 - DEBUG - receive_response_body.complete
2025-03-29 19:16:36,294 - DEBUG - response_closed.started
2025-03-29 19:16:36,294 - DEBUG - response_closed.complete
2025-03-29 19:16:36,294 - DEBUG - Call to Bot API endpoint `getUpdates` finished with return value `[{'update_id': 764461540, 'message': {'message_id': 1089, 'from': {'id': 173968578, 'is_bot': False, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'language_code': 'ru', 'is_premium': True}, 'chat': {'id': 173968578, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'type': 'private'}, 'date': 1743264996, 'text': '/edit_price', 'entities': [{'offset': 0, 'length': 11, 'type': 'bot_command'}]}}]`
2025-03-29 19:16:36,295 - DEBUG - Getting updates: [764461540]
2025-03-29 19:16:36,295 - DEBUG - Processing update Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Александр', id=173968578, last_name='Ермилов', type=<ChatType.PRIVATE>, username='ermilov1988'), date=datetime.datetime(2025, 3, 29, 16, 16, 36, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=11, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Александр', id=173968578, is_bot=False, is_premium=True, language_code='ru', last_name='Ермилов', username='ermilov1988'), group_chat_created=False, message_id=1089, supergroup_chat_created=False, text='/edit_price'), update_id=764461540)
2025-03-29 19:16:36,297 - DEBUG - Selecting conversation (173968578, 173968578) with state None
2025-03-29 19:16:36,299 - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/Users/aleksandrermilov/Documents/python/irina/glass/glass/env/lib/python3.13/site-packages/telegram/ext/_application.py", line 1298, in process_update
    await coroutine
  File "/Users/aleksandrermilov/Documents/python/irina/glass/glass/env/lib/python3.13/site-packages/telegram/ext/_handlers/conversationhandler.py", line 842, in handle_update
    new_state: object = await handler.handle_update(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        update, application, handler_check_result, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/aleksandrermilov/Documents/python/irina/glass/glass/env/lib/python3.13/site-packages/telegram/ext/_handlers/basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/aleksandrermilov/Documents/python/irina/glass/glass/main.py", line 655, in edit_price
    price_items = parse_html_price()
  File "/Users/aleksandrermilov/Documents/python/irina/glass/glass/main.py", line 633, in parse_html_price
    from bs4 import BeautifulSoup
ModuleNotFoundError: No module named 'bs4'
2025-03-29 19:16:36,301 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 764461541}`
2025-03-29 19:16:36,301 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:36,301 - DEBUG - send_request_headers.complete
2025-03-29 19:16:36,301 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:36,301 - DEBUG - send_request_body.complete
2025-03-29 19:16:36,301 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:46,371 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'23'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:46,373 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getUpdates "HTTP/1.1 200 OK"
2025-03-29 19:16:46,373 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:46,373 - DEBUG - receive_response_body.complete
2025-03-29 19:16:46,374 - DEBUG - response_closed.started
2025-03-29 19:16:46,374 - DEBUG - response_closed.complete
2025-03-29 19:16:46,374 - DEBUG - Call to Bot API endpoint `getUpdates` finished with return value `[]`
2025-03-29 19:16:46,375 - DEBUG - No new updates found.
2025-03-29 19:16:46,375 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 764461541}`
2025-03-29 19:16:46,376 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:46,376 - DEBUG - send_request_headers.complete
2025-03-29 19:16:46,376 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:46,377 - DEBUG - send_request_body.complete
2025-03-29 19:16:46,377 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:54,494 - DEBUG - Application received stop signal. Shutting down.
2025-03-29 19:16:54,494 - DEBUG - Stopping Updater
2025-03-29 19:16:54,495 - DEBUG - Waiting background polling task to finish up.
2025-03-29 19:16:54,495 - DEBUG - Network Retry Loop (Polling Updates): Cancelled
2025-03-29 19:16:54,495 - DEBUG - receive_response_headers.failed exception=CancelledError()
2025-03-29 19:16:54,496 - DEBUG - response_closed.started
2025-03-29 19:16:54,496 - DEBUG - Calling `get_updates` one more time to mark all fetched updates as read.
2025-03-29 19:16:54,496 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 0, 'offset': 764461541}`
2025-03-29 19:16:54,497 - DEBUG - response_closed.complete
2025-03-29 19:16:54,498 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:16:54,544 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x102fad6e0>
2025-03-29 19:16:54,545 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x102e62cc0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:16:54,703 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x102f397f0>
2025-03-29 19:16:54,704 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:16:54,705 - DEBUG - send_request_headers.complete
2025-03-29 19:16:54,706 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:16:54,707 - DEBUG - send_request_body.complete
2025-03-29 19:16:54,707 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:16:54,779 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:16:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'23'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:16:54,780 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getUpdates "HTTP/1.1 200 OK"
2025-03-29 19:16:54,781 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:16:54,781 - DEBUG - receive_response_body.complete
2025-03-29 19:16:54,782 - DEBUG - response_closed.started
2025-03-29 19:16:54,782 - DEBUG - response_closed.complete
2025-03-29 19:16:54,783 - DEBUG - Call to Bot API endpoint `getUpdates` finished with return value `[]`
2025-03-29 19:16:54,783 - DEBUG - No new updates found.
2025-03-29 19:16:54,783 - DEBUG - Updater.stop() is complete
2025-03-29 19:16:54,783 - INFO - Application is stopping. This might take a moment.
2025-03-29 19:16:54,783 - DEBUG - Waiting for update_queue to join
2025-03-29 19:16:54,784 - DEBUG - Application stopped fetching of updates.
2025-03-29 19:16:54,784 - DEBUG - Waiting for `create_task` calls to be processed
2025-03-29 19:16:54,784 - INFO - Application.stop() complete
2025-03-29 19:16:54,784 - DEBUG - close.started
2025-03-29 19:16:54,785 - DEBUG - close.started
2025-03-29 19:16:54,786 - DEBUG - close.complete
2025-03-29 19:16:54,788 - DEBUG - close.complete
2025-03-29 19:16:54,789 - DEBUG - This Bot is already shut down. Returning.
2025-03-29 19:16:54,789 - DEBUG - Shut down of Updater complete
2025-03-29 19:17:06,798 - INFO - Bot started.
2025-03-29 19:17:06,820 - DEBUG - Set Bot API URL: https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto
2025-03-29 19:17:06,820 - DEBUG - Set Bot API File URL: https://api.telegram.org/file/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto
2025-03-29 19:17:06,821 - DEBUG - Using selector: KqueueSelector
2025-03-29 19:17:06,821 - DEBUG - Network Retry Loop (Bootstrap Initialize Application): Starting
2025-03-29 19:17:06,821 - DEBUG - Calling Bot API endpoint `getMe` with parameters `{}`
2025-03-29 19:17:06,823 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:17:06,825 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104b31010>
2025-03-29 19:17:06,825 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1049de8d0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:17:06,971 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104ad2850>
2025-03-29 19:17:06,971 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:06,971 - DEBUG - send_request_headers.complete
2025-03-29 19:17:06,971 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:06,972 - DEBUG - send_request_body.complete
2025-03-29 19:17:06,972 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:07,043 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'260'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:07,044 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getMe "HTTP/1.1 200 OK"
2025-03-29 19:17:07,044 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:07,044 - DEBUG - receive_response_body.complete
2025-03-29 19:17:07,044 - DEBUG - response_closed.started
2025-03-29 19:17:07,044 - DEBUG - response_closed.complete
2025-03-29 19:17:07,044 - DEBUG - Call to Bot API endpoint `getMe` finished with return value `{'id': 8064160693, 'is_bot': True, 'first_name': 'Lashes__butovo', 'username': 'LashesButovo_bot', 'can_join_groups': True, 'can_read_all_group_messages': False, 'supports_inline_queries': False, 'can_connect_to_business': False, 'has_main_web_app': False}`
2025-03-29 19:17:07,044 - DEBUG - This Bot is already initialized.
2025-03-29 19:17:07,045 - DEBUG - Updater started (polling)
2025-03-29 19:17:07,045 - DEBUG - Network Retry Loop (Bootstrap delete Webhook): Starting
2025-03-29 19:17:07,045 - DEBUG - Deleting webhook
2025-03-29 19:17:07,045 - DEBUG - Calling Bot API endpoint `deleteWebhook` with parameters `{}`
2025-03-29 19:17:07,046 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:07,046 - DEBUG - send_request_headers.complete
2025-03-29 19:17:07,046 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:07,046 - DEBUG - send_request_body.complete
2025-03-29 19:17:07,046 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:07,123 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'68'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:07,124 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/deleteWebhook "HTTP/1.1 200 OK"
2025-03-29 19:17:07,124 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:07,124 - DEBUG - receive_response_body.complete
2025-03-29 19:17:07,124 - DEBUG - response_closed.started
2025-03-29 19:17:07,124 - DEBUG - response_closed.complete
2025-03-29 19:17:07,124 - DEBUG - Call to Bot API endpoint `deleteWebhook` finished with return value `True`
2025-03-29 19:17:07,124 - DEBUG - Bootstrap done
2025-03-29 19:17:07,124 - DEBUG - Waiting for polling to start
2025-03-29 19:17:07,124 - DEBUG - Polling updates from Telegram started
2025-03-29 19:17:07,124 - DEBUG - Network Retry Loop (Polling Updates): Starting
2025-03-29 19:17:07,124 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 0}`
2025-03-29 19:17:07,124 - INFO - Application started
2025-03-29 19:17:07,124 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:17:07,126 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104b58b90>
2025-03-29 19:17:07,126 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1049decc0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:17:07,276 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104a66fd0>
2025-03-29 19:17:07,276 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:07,277 - DEBUG - send_request_headers.complete
2025-03-29 19:17:07,277 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:07,277 - DEBUG - send_request_body.complete
2025-03-29 19:17:07,277 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:10,542 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'598'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:10,544 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getUpdates "HTTP/1.1 200 OK"
2025-03-29 19:17:10,544 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:10,545 - DEBUG - receive_response_body.complete
2025-03-29 19:17:10,545 - DEBUG - response_closed.started
2025-03-29 19:17:10,545 - DEBUG - response_closed.complete
2025-03-29 19:17:10,546 - DEBUG - Call to Bot API endpoint `getUpdates` finished with return value `[{'update_id': 764461541, 'message': {'message_id': 1090, 'from': {'id': 173968578, 'is_bot': False, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'language_code': 'ru', 'is_premium': True}, 'chat': {'id': 173968578, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'type': 'private'}, 'date': 1743265030, 'text': '/edit_price', 'entities': [{'offset': 0, 'length': 11, 'type': 'bot_command'}]}}]`
2025-03-29 19:17:10,546 - DEBUG - Getting updates: [764461541]
2025-03-29 19:17:10,552 - DEBUG - Processing update Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Александр', id=173968578, last_name='Ермилов', type=<ChatType.PRIVATE>, username='ermilov1988'), date=datetime.datetime(2025, 3, 29, 16, 17, 10, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=11, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Александр', id=173968578, is_bot=False, is_premium=True, language_code='ru', last_name='Ермилов', username='ermilov1988'), group_chat_created=False, message_id=1090, supergroup_chat_created=False, text='/edit_price'), update_id=764461541)
2025-03-29 19:17:10,553 - DEBUG - Selecting conversation (173968578, 173968578) with state None
2025-03-29 19:17:10,588 - DEBUG - Calling Bot API endpoint `sendMessage` with parameters `{'chat_id': 173968578, 'text': '🛠 Выберите услугу для редактирования:', 'reply_markup': InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='edit_0', text='Уголки — 2200'),), (InlineKeyboardButton(callback_data='edit_1', text='1D — 2500'),), (InlineKeyboardButton(callback_data='edit_2', text='1.5D — 2700'),), (InlineKeyboardButton(callback_data='edit_3', text='2D — 2800'),), (InlineKeyboardButton(callback_data='edit_4', text='2.5D — 3000'),), (InlineKeyboardButton(callback_data='edit_5', text='3D — 3100'),), (InlineKeyboardButton(callback_data='edit_6', text='4D — 3400'),), (InlineKeyboardButton(callback_data='edit_7', text='Цветные ресницы, блестки, лучики — +300'),), (InlineKeyboardButton(callback_data='edit_8', text='Моей работы с последующим наращиванием — Бесплатно'),), (InlineKeyboardButton(callback_data='edit_9', text='Моей работы без последующего наращивания — 300'),), (InlineKeyboardButton(callback_data='edit_10', text='Работы другого мастера — 300'),), (InlineKeyboardButton(callback_data='cancel_edit', text='❌ Отмена'),), (InlineKeyboardButton(callback_data='calendar_open', text='📅 Календарь'),)))}`
2025-03-29 19:17:10,588 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:10,589 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 764461542}`
2025-03-29 19:17:10,589 - DEBUG - send_request_headers.complete
2025-03-29 19:17:10,589 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:10,589 - DEBUG - send_request_body.complete
2025-03-29 19:17:10,589 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:10,589 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:10,589 - DEBUG - send_request_headers.complete
2025-03-29 19:17:10,589 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:10,589 - DEBUG - send_request_body.complete
2025-03-29 19:17:10,589 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:10,692 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2179'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:10,692 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/sendMessage "HTTP/1.1 200 OK"
2025-03-29 19:17:10,692 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:10,693 - DEBUG - receive_response_body.complete
2025-03-29 19:17:10,693 - DEBUG - response_closed.started
2025-03-29 19:17:10,693 - DEBUG - response_closed.complete
2025-03-29 19:17:10,693 - DEBUG - Call to Bot API endpoint `sendMessage` finished with return value `{'message_id': 1091, 'from': {'id': 8064160693, 'is_bot': True, 'first_name': 'Lashes__butovo', 'username': 'LashesButovo_bot'}, 'chat': {'id': 173968578, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'type': 'private'}, 'date': 1743265030, 'text': '🛠 Выберите услугу для редактирования:', 'reply_markup': {'inline_keyboard': [[{'text': 'Уголки — 2200', 'callback_data': 'edit_0'}], [{'text': '1D — 2500', 'callback_data': 'edit_1'}], [{'text': '1.5D — 2700', 'callback_data': 'edit_2'}], [{'text': '2D — 2800', 'callback_data': 'edit_3'}], [{'text': '2.5D — 3000', 'callback_data': 'edit_4'}], [{'text': '3D — 3100', 'callback_data': 'edit_5'}], [{'text': '4D — 3400', 'callback_data': 'edit_6'}], [{'text': 'Цветные ресницы, блестки, лучики — +300', 'callback_data': 'edit_7'}], [{'text': 'Моей работы с последующим наращиванием — Бесплатно', 'callback_data': 'edit_8'}], [{'text': 'Моей работы без последующего наращивания — 300', 'callback_data': 'edit_9'}], [{'text': 'Работы другого мастера — 300', 'callback_data': 'edit_10'}], [{'text': '❌ Отмена', 'callback_data': 'cancel_edit'}], [{'text': '📅 Календарь', 'callback_data': 'calendar_open'}]]}}`
2025-03-29 19:17:14,551 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'2552'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:14,552 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getUpdates "HTTP/1.1 200 OK"
2025-03-29 19:17:14,552 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:14,553 - DEBUG - receive_response_body.complete
2025-03-29 19:17:14,553 - DEBUG - response_closed.started
2025-03-29 19:17:14,553 - DEBUG - response_closed.complete
2025-03-29 19:17:14,553 - DEBUG - Call to Bot API endpoint `getUpdates` finished with return value `[{'update_id': 764461542, 'callback_query': {'id': '747189356382306393', 'from': {'id': 173968578, 'is_bot': False, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'language_code': 'ru', 'is_premium': True}, 'message': {'message_id': 1091, 'from': {'id': 8064160693, 'is_bot': True, 'first_name': 'Lashes__butovo', 'username': 'LashesButovo_bot'}, 'chat': {'id': 173968578, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'type': 'private'}, 'date': 1743265030, 'text': '🛠 Выберите услугу для редактирования:', 'reply_markup': {'inline_keyboard': [[{'text': 'Уголки — 2200', 'callback_data': 'edit_0'}], [{'text': '1D — 2500', 'callback_data': 'edit_1'}], [{'text': '1.5D — 2700', 'callback_data': 'edit_2'}], [{'text': '2D — 2800', 'callback_data': 'edit_3'}], [{'text': '2.5D — 3000', 'callback_data': 'edit_4'}], [{'text': '3D — 3100', 'callback_data': 'edit_5'}], [{'text': '4D — 3400', 'callback_data': 'edit_6'}], [{'text': 'Цветные ресницы, блестки, лучики — +300', 'callback_data': 'edit_7'}], [{'text': 'Моей работы с последующим наращиванием — Бесплатно', 'callback_data': 'edit_8'}], [{'text': 'Моей работы без последующего наращивания — 300', 'callback_data': 'edit_9'}], [{'text': 'Работы другого мастера — 300', 'callback_data': 'edit_10'}], [{'text': '❌ Отмена', 'callback_data': 'cancel_edit'}], [{'text': '📅 Календарь', 'callback_data': 'calendar_open'}]]}}, 'chat_instance': '1753043117836092972', 'data': 'calendar_open'}}]`
2025-03-29 19:17:14,553 - DEBUG - Getting updates: [764461542]
2025-03-29 19:17:14,554 - DEBUG - Processing update Update(callback_query=CallbackQuery(chat_instance='1753043117836092972', data='calendar_open', from_user=User(first_name='Александр', id=173968578, is_bot=False, is_premium=True, language_code='ru', last_name='Ермилов', username='ermilov1988'), id='747189356382306393', message=Message(channel_chat_created=False, chat=Chat(first_name='Александр', id=173968578, last_name='Ермилов', type=<ChatType.PRIVATE>, username='ermilov1988'), date=datetime.datetime(2025, 3, 29, 16, 17, 10, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Lashes__butovo', id=8064160693, is_bot=True, username='LashesButovo_bot'), group_chat_created=False, message_id=1091, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='edit_0', text='Уголки — 2200'),), (InlineKeyboardButton(callback_data='edit_1', text='1D — 2500'),), (InlineKeyboardButton(callback_data='edit_2', text='1.5D — 2700'),), (InlineKeyboardButton(callback_data='edit_3', text='2D — 2800'),), (InlineKeyboardButton(callback_data='edit_4', text='2.5D — 3000'),), (InlineKeyboardButton(callback_data='edit_5', text='3D — 3100'),), (InlineKeyboardButton(callback_data='edit_6', text='4D — 3400'),), (InlineKeyboardButton(callback_data='edit_7', text='Цветные ресницы, блестки, лучики — +300'),), (InlineKeyboardButton(callback_data='edit_8', text='Моей работы с последующим наращиванием — Бесплатно'),), (InlineKeyboardButton(callback_data='edit_9', text='Моей работы без последующего наращивания — 300'),), (InlineKeyboardButton(callback_data='edit_10', text='Работы другого мастера — 300'),), (InlineKeyboardButton(callback_data='cancel_edit', text='❌ Отмена'),), (InlineKeyboardButton(callback_data='calendar_open', text='📅 Календарь'),))), supergroup_chat_created=False, text='🛠 Выберите услугу для редактирования:')), update_id=764461542)
2025-03-29 19:17:14,555 - INFO - Calendar button pressed.
2025-03-29 19:17:14,555 - DEBUG - Calling Bot API endpoint `answerCallbackQuery` with parameters `{'callback_query_id': '747189356382306393'}`
2025-03-29 19:17:14,556 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:14,556 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 764461543}`
2025-03-29 19:17:14,557 - DEBUG - send_request_headers.complete
2025-03-29 19:17:14,557 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:14,558 - DEBUG - send_request_body.complete
2025-03-29 19:17:14,558 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:14,558 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:14,558 - DEBUG - send_request_headers.complete
2025-03-29 19:17:14,559 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:14,559 - DEBUG - send_request_body.complete
2025-03-29 19:17:14,559 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:14,640 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'25'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:14,640 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/answerCallbackQuery "HTTP/1.1 200 OK"
2025-03-29 19:17:14,640 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:14,640 - DEBUG - receive_response_body.complete
2025-03-29 19:17:14,640 - DEBUG - response_closed.started
2025-03-29 19:17:14,641 - DEBUG - response_closed.complete
2025-03-29 19:17:14,641 - DEBUG - Call to Bot API endpoint `answerCallbackQuery` finished with return value `True`
2025-03-29 19:17:14,641 - INFO - IrCalendar initialized with CalDAV URL: https://caldav.yandex.ru
2025-03-29 19:17:14,641 - DEBUG - Generating calendar for year: 2025, month: 3, mode: auto
2025-03-29 19:17:14,641 - DEBUG - Generated calendar buttons: [[InlineKeyboardButton(callback_data='none', text='Пн'), InlineKeyboardButton(callback_data='none', text='Вт'), InlineKeyboardButton(callback_data='none', text='Ср'), InlineKeyboardButton(callback_data='none', text='Чт'), InlineKeyboardButton(callback_data='none', text='Пт'), InlineKeyboardButton(callback_data='none', text='Сб'), InlineKeyboardButton(callback_data='none', text='Вс')], [InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='day_2025_3_1', text='1'), InlineKeyboardButton(callback_data='day_2025_3_2', text='2')], [InlineKeyboardButton(callback_data='day_2025_3_3', text='3'), InlineKeyboardButton(callback_data='day_2025_3_4', text='4'), InlineKeyboardButton(callback_data='day_2025_3_5', text='5'), InlineKeyboardButton(callback_data='day_2025_3_6', text='6'), InlineKeyboardButton(callback_data='day_2025_3_7', text='7'), InlineKeyboardButton(callback_data='day_2025_3_8', text='8'), InlineKeyboardButton(callback_data='day_2025_3_9', text='9')], [InlineKeyboardButton(callback_data='day_2025_3_10', text='10'), InlineKeyboardButton(callback_data='day_2025_3_11', text='11'), InlineKeyboardButton(callback_data='day_2025_3_12', text='12'), InlineKeyboardButton(callback_data='day_2025_3_13', text='13'), InlineKeyboardButton(callback_data='day_2025_3_14', text='14'), InlineKeyboardButton(callback_data='day_2025_3_15', text='15'), InlineKeyboardButton(callback_data='day_2025_3_16', text='16')], [InlineKeyboardButton(callback_data='day_2025_3_17', text='17'), InlineKeyboardButton(callback_data='day_2025_3_18', text='18'), InlineKeyboardButton(callback_data='day_2025_3_19', text='19'), InlineKeyboardButton(callback_data='day_2025_3_20', text='20'), InlineKeyboardButton(callback_data='day_2025_3_21', text='21'), InlineKeyboardButton(callback_data='day_2025_3_22', text='22'), InlineKeyboardButton(callback_data='day_2025_3_23', text='23')], [InlineKeyboardButton(callback_data='day_2025_3_24', text='24'), InlineKeyboardButton(callback_data='day_2025_3_25', text='25'), InlineKeyboardButton(callback_data='day_2025_3_26', text='26'), InlineKeyboardButton(callback_data='day_2025_3_27', text='27'), InlineKeyboardButton(callback_data='day_2025_3_28', text='28'), InlineKeyboardButton(callback_data='day_2025_3_29', text='29'), InlineKeyboardButton(callback_data='day_2025_3_30', text='30')], [InlineKeyboardButton(callback_data='day_2025_3_31', text='31'), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' ')], [InlineKeyboardButton(callback_data='prev_month_2025_3', text='⬅️'), InlineKeyboardButton(callback_data='none', text='марта 2025'), InlineKeyboardButton(callback_data='next_month_2025_3', text='➡️')]]
2025-03-29 19:17:14,642 - DEBUG - Calling Bot API endpoint `editMessageText` with parameters `{'text': '📅 Выберите дату:', 'chat_id': 173968578, 'message_id': 1091, 'reply_markup': InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='calendar_open', text='📅 Календарь'),), (InlineKeyboardButton(callback_data='price_html', text='📄 Прайс'),), (InlineKeyboardButton(callback_data='contacts_button', text='📞 Контакты'),), (InlineKeyboardButton(callback_data='none', text='Пн'), InlineKeyboardButton(callback_data='none', text='Вт'), InlineKeyboardButton(callback_data='none', text='Ср'), InlineKeyboardButton(callback_data='none', text='Чт'), InlineKeyboardButton(callback_data='none', text='Пт'), InlineKeyboardButton(callback_data='none', text='Сб'), InlineKeyboardButton(callback_data='none', text='Вс')), (InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='day_2025_3_1', text='1'), InlineKeyboardButton(callback_data='day_2025_3_2', text='2')), (InlineKeyboardButton(callback_data='day_2025_3_3', text='3'), InlineKeyboardButton(callback_data='day_2025_3_4', text='4'), InlineKeyboardButton(callback_data='day_2025_3_5', text='5'), InlineKeyboardButton(callback_data='day_2025_3_6', text='6'), InlineKeyboardButton(callback_data='day_2025_3_7', text='7'), InlineKeyboardButton(callback_data='day_2025_3_8', text='8'), InlineKeyboardButton(callback_data='day_2025_3_9', text='9')), (InlineKeyboardButton(callback_data='day_2025_3_10', text='10'), InlineKeyboardButton(callback_data='day_2025_3_11', text='11'), InlineKeyboardButton(callback_data='day_2025_3_12', text='12'), InlineKeyboardButton(callback_data='day_2025_3_13', text='13'), InlineKeyboardButton(callback_data='day_2025_3_14', text='14'), InlineKeyboardButton(callback_data='day_2025_3_15', text='15'), InlineKeyboardButton(callback_data='day_2025_3_16', text='16')), (InlineKeyboardButton(callback_data='day_2025_3_17', text='17'), InlineKeyboardButton(callback_data='day_2025_3_18', text='18'), InlineKeyboardButton(callback_data='day_2025_3_19', text='19'), InlineKeyboardButton(callback_data='day_2025_3_20', text='20'), InlineKeyboardButton(callback_data='day_2025_3_21', text='21'), InlineKeyboardButton(callback_data='day_2025_3_22', text='22'), InlineKeyboardButton(callback_data='day_2025_3_23', text='23')), (InlineKeyboardButton(callback_data='day_2025_3_24', text='24'), InlineKeyboardButton(callback_data='day_2025_3_25', text='25'), InlineKeyboardButton(callback_data='day_2025_3_26', text='26'), InlineKeyboardButton(callback_data='day_2025_3_27', text='27'), InlineKeyboardButton(callback_data='day_2025_3_28', text='28'), InlineKeyboardButton(callback_data='day_2025_3_29', text='29'), InlineKeyboardButton(callback_data='day_2025_3_30', text='30')), (InlineKeyboardButton(callback_data='day_2025_3_31', text='31'), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' '), InlineKeyboardButton(callback_data='none', text=' ')), (InlineKeyboardButton(callback_data='prev_month_2025_3', text='⬅️'), InlineKeyboardButton(callback_data='none', text='марта 2025'), InlineKeyboardButton(callback_data='next_month_2025_3', text='➡️'))))}`
2025-03-29 19:17:14,643 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:14,643 - DEBUG - send_request_headers.complete
2025-03-29 19:17:14,643 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:14,643 - DEBUG - send_request_body.complete
2025-03-29 19:17:14,643 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:14,752 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'3154'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:14,752 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/editMessageText "HTTP/1.1 200 OK"
2025-03-29 19:17:14,752 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:14,752 - DEBUG - receive_response_body.complete
2025-03-29 19:17:14,753 - DEBUG - response_closed.started
2025-03-29 19:17:14,753 - DEBUG - response_closed.complete
2025-03-29 19:17:14,753 - DEBUG - Call to Bot API endpoint `editMessageText` finished with return value `{'message_id': 1091, 'from': {'id': 8064160693, 'is_bot': True, 'first_name': 'Lashes__butovo', 'username': 'LashesButovo_bot'}, 'chat': {'id': 173968578, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'type': 'private'}, 'date': 1743265030, 'edit_date': 1743265034, 'text': '📅 Выберите дату:', 'reply_markup': {'inline_keyboard': [[{'text': '📅 Календарь', 'callback_data': 'calendar_open'}], [{'text': '📄 Прайс', 'callback_data': 'price_html'}], [{'text': '📞 Контакты', 'callback_data': 'contacts_button'}], [{'text': 'Пн', 'callback_data': 'none'}, {'text': 'Вт', 'callback_data': 'none'}, {'text': 'Ср', 'callback_data': 'none'}, {'text': 'Чт', 'callback_data': 'none'}, {'text': 'Пт', 'callback_data': 'none'}, {'text': 'Сб', 'callback_data': 'none'}, {'text': 'Вс', 'callback_data': 'none'}], [{'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}, {'text': '1', 'callback_data': 'day_2025_3_1'}, {'text': '2', 'callback_data': 'day_2025_3_2'}], [{'text': '3', 'callback_data': 'day_2025_3_3'}, {'text': '4', 'callback_data': 'day_2025_3_4'}, {'text': '5', 'callback_data': 'day_2025_3_5'}, {'text': '6', 'callback_data': 'day_2025_3_6'}, {'text': '7', 'callback_data': 'day_2025_3_7'}, {'text': '8', 'callback_data': 'day_2025_3_8'}, {'text': '9', 'callback_data': 'day_2025_3_9'}], [{'text': '10', 'callback_data': 'day_2025_3_10'}, {'text': '11', 'callback_data': 'day_2025_3_11'}, {'text': '12', 'callback_data': 'day_2025_3_12'}, {'text': '13', 'callback_data': 'day_2025_3_13'}, {'text': '14', 'callback_data': 'day_2025_3_14'}, {'text': '15', 'callback_data': 'day_2025_3_15'}, {'text': '16', 'callback_data': 'day_2025_3_16'}], [{'text': '17', 'callback_data': 'day_2025_3_17'}, {'text': '18', 'callback_data': 'day_2025_3_18'}, {'text': '19', 'callback_data': 'day_2025_3_19'}, {'text': '20', 'callback_data': 'day_2025_3_20'}, {'text': '21', 'callback_data': 'day_2025_3_21'}, {'text': '22', 'callback_data': 'day_2025_3_22'}, {'text': '23', 'callback_data': 'day_2025_3_23'}], [{'text': '24', 'callback_data': 'day_2025_3_24'}, {'text': '25', 'callback_data': 'day_2025_3_25'}, {'text': '26', 'callback_data': 'day_2025_3_26'}, {'text': '27', 'callback_data': 'day_2025_3_27'}, {'text': '28', 'callback_data': 'day_2025_3_28'}, {'text': '29', 'callback_data': 'day_2025_3_29'}, {'text': '30', 'callback_data': 'day_2025_3_30'}], [{'text': '31', 'callback_data': 'day_2025_3_31'}, {'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}, {'text': ' ', 'callback_data': 'none'}], [{'text': '⬅️', 'callback_data': 'prev_month_2025_3'}, {'text': 'марта 2025', 'callback_data': 'none'}, {'text': '➡️', 'callback_data': 'next_month_2025_3'}]]}}`
2025-03-29 19:17:14,753 - DEBUG - Calling Bot API endpoint `sendMessage` with parameters `{'chat_id': 173968578, 'text': '⏳ Загружаем данные...'}`
2025-03-29 19:17:14,754 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:14,754 - DEBUG - send_request_headers.complete
2025-03-29 19:17:14,754 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:14,754 - DEBUG - send_request_body.complete
2025-03-29 19:17:14,754 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:14,857 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'461'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:14,857 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/sendMessage "HTTP/1.1 200 OK"
2025-03-29 19:17:14,857 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:14,857 - DEBUG - receive_response_body.complete
2025-03-29 19:17:14,857 - DEBUG - response_closed.started
2025-03-29 19:17:14,858 - DEBUG - response_closed.complete
2025-03-29 19:17:14,858 - DEBUG - Call to Bot API endpoint `sendMessage` finished with return value `{'message_id': 1092, 'from': {'id': 8064160693, 'is_bot': True, 'first_name': 'Lashes__butovo', 'username': 'LashesButovo_bot'}, 'chat': {'id': 173968578, 'first_name': 'Александр', 'last_name': 'Ермилов', 'username': 'ermilov1988', 'type': 'private'}, 'date': 1743265034, 'text': '⏳ Загружаем данные...'}`
2025-03-29 19:17:14,858 - INFO - Updating calendar status for year: 2025, month: 3
2025-03-29 19:17:14,858 - INFO - Finding free slots for date: 2025-03-01
2025-03-29 19:17:14,858 - DEBUG - Asynchronously getting busy slots for date: 2025-03-01
2025-03-29 19:17:14,858 - INFO - Getting busy slots for date: 2025-03-01
2025-03-29 19:17:14,859 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:15,143 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:15,333 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:15,434 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:15,813 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:15,814 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:15,974 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:16,069 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:16,069 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:16,071 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:16,071 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:16,072 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:16,072 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:16,074 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:16,074 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:16,075 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:16,075 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:16,077 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:16,079 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:16,082 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:16,082 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:16,084 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:16,084 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:16,085 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:16,085 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:16,087 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:16,087 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:16,088 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:16,088 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:16,089 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:16,089 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:16,091 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:16,091 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:16,093 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:16,093 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:16,094 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:16,094 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:16,095 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:16,095 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:16,096 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:16,096 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:16,097 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:16,097 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:16,098 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:16,098 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:16,099 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:16,099 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:16,100 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:16,100 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:16,101 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:16,101 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:16,102 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:16,102 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:16,103 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:16,103 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:16,104 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:16,104 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:16,105 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:16,105 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:16,106 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:16,106 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:16,107 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:16,107 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:16,108 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:16,108 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:16,109 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:16,109 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:16,109 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:16,110 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:16,110 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:16,110 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:16,111 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:16,112 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:16,112 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:16,113 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:16,113 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:16,113 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:16,115 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:16,115 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:16,115 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:16,115 - INFO - Found free slots: [datetime.datetime(2025, 3, 1, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 1, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 1, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 1, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:16,115 - DEBUG - Day 1 status: ✅
2025-03-29 19:17:16,115 - INFO - Finding free slots for date: 2025-03-02
2025-03-29 19:17:16,115 - DEBUG - Asynchronously getting busy slots for date: 2025-03-02
2025-03-29 19:17:16,115 - INFO - Getting busy slots for date: 2025-03-02
2025-03-29 19:17:16,116 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:16,323 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:16,501 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:16,586 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:16,696 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:16,698 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:16,827 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:16,922 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:16,922 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:16,924 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:16,924 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:16,926 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:16,926 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:16,927 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:16,928 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:16,929 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:16,929 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:16,931 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:16,931 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:16,932 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:16,932 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:16,933 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:16,934 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:16,935 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:16,935 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:16,936 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:16,936 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:16,938 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:16,938 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:16,939 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:16,939 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:16,941 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:16,941 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:16,942 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:16,942 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:16,943 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:16,943 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:16,945 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:16,945 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:16,946 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:16,946 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:16,948 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:16,948 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:16,949 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:16,949 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:16,950 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:16,950 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:16,951 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:16,951 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:16,953 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:16,953 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:16,954 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:16,954 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:16,955 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:16,955 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:16,956 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:16,956 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:16,957 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:16,957 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:16,958 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:16,958 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:16,959 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:16,960 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:16,961 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:16,961 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:16,962 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:16,962 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:16,963 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:16,963 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:16,964 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:16,964 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:16,965 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:16,965 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:16,966 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:16,966 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:16,967 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:16,967 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:16,968 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:16,968 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:16,968 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:16,969 - INFO - Found free slots: [datetime.datetime(2025, 3, 2, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 2, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 2, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 2, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:16,969 - DEBUG - Day 2 status: ✅
2025-03-29 19:17:16,969 - INFO - Finding free slots for date: 2025-03-03
2025-03-29 19:17:16,969 - DEBUG - Asynchronously getting busy slots for date: 2025-03-03
2025-03-29 19:17:16,969 - INFO - Getting busy slots for date: 2025-03-03
2025-03-29 19:17:16,969 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:17,224 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:17,290 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:17,362 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:17,520 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:17,521 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:17,668 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:17,766 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:17,766 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:17,768 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:17,768 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:17,770 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:17,770 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:17,771 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:17,771 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:17,773 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:17,773 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:17,774 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:17,774 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:17,776 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:17,776 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:17,777 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:17,777 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:17,778 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:17,778 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:17,780 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:17,780 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:17,781 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:17,781 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:17,783 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:17,783 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:17,784 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:17,784 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:17,785 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:17,785 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:17,787 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:17,787 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:17,788 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:17,788 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:17,789 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:17,789 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:17,790 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:17,790 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:17,792 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:17,792 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:17,793 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:17,793 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:17,794 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:17,794 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:17,795 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:17,795 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:17,796 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:17,796 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:17,798 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:17,798 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:17,799 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:17,799 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:17,800 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:17,800 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:17,801 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:17,801 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:17,802 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:17,802 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:17,803 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:17,803 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:17,804 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:17,804 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:17,805 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:17,805 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:17,806 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:17,806 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:17,808 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:17,808 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:17,809 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:17,809 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:17,810 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:17,810 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:17,811 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:17,811 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:17,811 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:17,812 - INFO - Found free slots: [datetime.datetime(2025, 3, 3, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 3, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 3, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 3, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:17,812 - DEBUG - Day 3 status: ✅
2025-03-29 19:17:17,812 - INFO - Finding free slots for date: 2025-03-04
2025-03-29 19:17:17,812 - DEBUG - Asynchronously getting busy slots for date: 2025-03-04
2025-03-29 19:17:17,812 - INFO - Getting busy slots for date: 2025-03-04
2025-03-29 19:17:17,812 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:19,114 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:19,269 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:19,373 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:19,505 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:19,506 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:19,652 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:19,763 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:19,763 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:19,765 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:19,765 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:19,766 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:19,766 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:19,768 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:19,768 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:19,770 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:19,770 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:19,771 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:19,771 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:19,773 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:19,773 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:19,774 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:19,774 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:19,776 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:19,776 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:19,777 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:19,777 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:19,779 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:19,779 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:19,780 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:19,780 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:19,781 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:19,781 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:19,783 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:19,783 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:19,784 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:19,784 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:19,785 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:19,786 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:19,787 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:19,787 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:19,788 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:19,788 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:19,789 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:19,789 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:19,790 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:19,791 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:19,792 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:19,792 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:19,793 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:19,793 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:19,794 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:19,794 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:19,795 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:19,795 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:19,797 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:19,797 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:19,798 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:19,798 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:19,799 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:19,799 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:19,800 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:19,800 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:19,801 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:19,801 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:19,802 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:19,802 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:19,803 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:19,803 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:19,805 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:19,805 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:19,806 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:19,806 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:19,807 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:19,807 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:19,808 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:19,808 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:19,809 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:19,809 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:19,809 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:19,809 - INFO - Found free slots: [datetime.datetime(2025, 3, 4, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 4, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 4, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 4, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:19,809 - DEBUG - Day 4 status: ✅
2025-03-29 19:17:19,809 - INFO - Finding free slots for date: 2025-03-05
2025-03-29 19:17:19,809 - DEBUG - Asynchronously getting busy slots for date: 2025-03-05
2025-03-29 19:17:19,809 - INFO - Getting busy slots for date: 2025-03-05
2025-03-29 19:17:19,810 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:20,022 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:20,107 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:20,196 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:20,305 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:20,307 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:20,425 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:20,527 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:20,527 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:20,529 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:20,529 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:20,531 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:20,531 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:20,532 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:20,532 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:20,534 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:20,534 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:20,536 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:20,536 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:20,537 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:20,537 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:20,539 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:20,539 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:20,540 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:20,540 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:20,542 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:20,542 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:20,543 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:20,543 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:20,544 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:20,544 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:20,546 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:20,546 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:20,547 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:20,547 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:20,549 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:20,549 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:20,550 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:20,550 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:20,551 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:20,551 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:20,553 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:20,553 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:20,554 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:20,554 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:20,555 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:20,555 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:20,556 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:20,556 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:20,557 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:20,557 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:20,559 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:20,559 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:20,560 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:20,560 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:20,561 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:20,561 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:20,562 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:20,562 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:20,564 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:20,564 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:20,565 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:20,565 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:20,566 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:20,566 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:20,567 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:20,567 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:20,568 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:20,568 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:20,569 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:20,569 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:20,570 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:20,570 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:20,572 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:20,572 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:20,573 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:20,573 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:20,574 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:20,574 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:20,574 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:20,574 - INFO - Found free slots: [datetime.datetime(2025, 3, 5, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 5, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 5, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 5, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:20,574 - DEBUG - Day 5 status: ✅
2025-03-29 19:17:20,574 - INFO - Finding free slots for date: 2025-03-06
2025-03-29 19:17:20,574 - DEBUG - Asynchronously getting busy slots for date: 2025-03-06
2025-03-29 19:17:20,574 - INFO - Getting busy slots for date: 2025-03-06
2025-03-29 19:17:20,575 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:20,796 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:20,937 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:21,061 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:21,182 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:21,184 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:21,344 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:21,443 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:21,443 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:21,445 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:21,445 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:21,446 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:21,446 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:21,448 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:21,448 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:21,449 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:21,449 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:21,450 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:21,450 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:21,452 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:21,452 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:21,453 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:21,453 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:21,455 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:21,455 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:21,456 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:21,456 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:21,457 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:21,457 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:21,458 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:21,458 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:21,460 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:21,460 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:21,461 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:21,461 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:21,462 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:21,462 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:21,463 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:21,463 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:21,464 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:21,464 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:21,466 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:21,466 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:21,467 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:21,467 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:21,468 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:21,468 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:21,469 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:21,469 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:21,470 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:21,470 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:21,471 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:21,471 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:21,473 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:21,473 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:21,474 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:21,474 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:21,475 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:21,475 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:21,476 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:21,476 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:21,477 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:21,477 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:21,478 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:21,478 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:21,479 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:21,479 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:21,480 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:21,480 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:21,481 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:21,481 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:21,482 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:21,482 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:21,483 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:21,483 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:21,484 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:21,484 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:21,485 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:21,485 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:21,485 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:21,486 - INFO - Found free slots: [datetime.datetime(2025, 3, 6, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 6, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 6, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 6, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:21,486 - DEBUG - Day 6 status: ✅
2025-03-29 19:17:21,486 - INFO - Finding free slots for date: 2025-03-07
2025-03-29 19:17:21,486 - DEBUG - Asynchronously getting busy slots for date: 2025-03-07
2025-03-29 19:17:21,486 - INFO - Getting busy slots for date: 2025-03-07
2025-03-29 19:17:21,486 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:21,705 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:21,770 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:21,853 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:22,012 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:22,013 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:22,153 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:22,357 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:22,357 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:22,359 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:22,359 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:22,361 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:22,361 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:22,362 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:22,362 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:22,364 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:22,364 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:22,366 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:22,366 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:22,367 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:22,367 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:22,369 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:22,369 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:22,370 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:22,370 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:22,372 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:22,372 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:22,373 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:22,373 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:22,375 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:22,375 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:22,376 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:22,376 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:22,377 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:22,377 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:22,379 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:22,379 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:22,380 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:22,380 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:22,381 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:22,381 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:22,383 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:22,383 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:22,384 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:22,384 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:22,385 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:22,385 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:22,386 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:22,386 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:22,387 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:22,387 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:22,389 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:22,389 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:22,390 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:22,390 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:22,391 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:22,391 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:22,393 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:22,393 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:22,394 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:22,394 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:22,395 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:22,395 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:22,396 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:22,396 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:22,397 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:22,397 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:22,399 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:22,399 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:22,400 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:22,400 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:22,401 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:22,401 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:22,402 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:22,402 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:22,403 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:22,403 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:22,404 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:22,404 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:22,405 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:22,405 - INFO - Found free slots: [datetime.datetime(2025, 3, 7, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 7, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 7, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 7, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:22,405 - DEBUG - Day 7 status: ✅
2025-03-29 19:17:22,405 - INFO - Finding free slots for date: 2025-03-08
2025-03-29 19:17:22,405 - DEBUG - Asynchronously getting busy slots for date: 2025-03-08
2025-03-29 19:17:22,405 - INFO - Getting busy slots for date: 2025-03-08
2025-03-29 19:17:22,406 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:22,609 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:22,687 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:22,766 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:22,871 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:22,871 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:22,995 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:23,193 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:23,193 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:23,195 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:23,195 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:23,196 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:23,196 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:23,198 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:23,198 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:23,199 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:23,199 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:23,200 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:23,201 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:23,202 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:23,202 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:23,203 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:23,203 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:23,204 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:23,204 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:23,206 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:23,206 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:23,207 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:23,207 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:23,208 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:23,208 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:23,209 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:23,209 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:23,210 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:23,210 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:23,212 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:23,212 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:23,213 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:23,213 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:23,214 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:23,214 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:23,215 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:23,215 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:23,217 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:23,217 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:23,218 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:23,218 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:23,219 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:23,219 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:23,220 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:23,220 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:23,221 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:23,221 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:23,222 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:23,222 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:23,224 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:23,224 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:23,225 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:23,225 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:23,226 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:23,226 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:23,227 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:23,227 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:23,228 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:23,228 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:23,229 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:23,229 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:23,230 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:23,230 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:23,231 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:23,231 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:23,232 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:23,232 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:23,233 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:23,233 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:23,234 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:23,234 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:23,235 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:23,235 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:23,236 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:23,236 - INFO - Found free slots: [datetime.datetime(2025, 3, 8, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 8, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 8, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 8, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:23,236 - DEBUG - Day 8 status: ✅
2025-03-29 19:17:23,236 - INFO - Finding free slots for date: 2025-03-09
2025-03-29 19:17:23,236 - DEBUG - Asynchronously getting busy slots for date: 2025-03-09
2025-03-29 19:17:23,236 - INFO - Getting busy slots for date: 2025-03-09
2025-03-29 19:17:23,237 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:23,450 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:23,529 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:23,643 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:23,734 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:23,735 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:23,876 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:24,079 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:24,079 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:24,080 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:24,080 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:24,082 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:24,082 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:24,084 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:24,084 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:24,085 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:24,085 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:24,087 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:24,087 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:24,088 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:24,088 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:24,090 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:24,090 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:24,091 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:24,091 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:24,092 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:24,093 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:24,094 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:24,094 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:24,095 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:24,096 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:24,097 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:24,097 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:24,098 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:24,098 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:24,099 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:24,099 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:24,101 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:24,101 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:24,102 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:24,102 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:24,103 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:24,104 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:24,105 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:24,105 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:24,106 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:24,106 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:24,107 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:24,107 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:24,108 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:24,108 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:24,110 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:24,110 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:24,111 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:24,111 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:24,112 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:24,112 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:24,114 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:24,114 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:24,115 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:24,115 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:24,116 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:24,116 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:24,117 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:24,117 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:24,118 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:24,118 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:24,120 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:24,120 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:24,121 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:24,121 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:24,122 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:24,122 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:24,123 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:24,123 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:24,124 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:24,124 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:24,125 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:24,125 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:24,125 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:24,126 - INFO - Found free slots: [datetime.datetime(2025, 3, 9, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 9, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 9, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 9, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:24,126 - DEBUG - Day 9 status: ✅
2025-03-29 19:17:24,126 - INFO - Finding free slots for date: 2025-03-10
2025-03-29 19:17:24,126 - DEBUG - Asynchronously getting busy slots for date: 2025-03-10
2025-03-29 19:17:24,126 - INFO - Getting busy slots for date: 2025-03-10
2025-03-29 19:17:24,126 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:24,340 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:24,417 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:24,484 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:24,633 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:24,634 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:24,635 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Server', b'nginx/1.18.0'), (b'Date', b'Sat, 29 Mar 2025 16:17:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'23'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'Access-Control-Allow-Origin', b'*'), (b'Access-Control-Allow-Methods', b'GET, POST, OPTIONS'), (b'Access-Control-Expose-Headers', b'Content-Length,Content-Type,Date,Server,Connection')])
2025-03-29 19:17:24,635 - INFO - HTTP Request: POST https://api.telegram.org/bot8064160693:AAGdXfMtjQhVZYT1A-igeDOxKyvs8isTBto/getUpdates "HTTP/1.1 200 OK"
2025-03-29 19:17:24,635 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-29 19:17:24,635 - DEBUG - receive_response_body.complete
2025-03-29 19:17:24,635 - DEBUG - response_closed.started
2025-03-29 19:17:24,636 - DEBUG - response_closed.complete
2025-03-29 19:17:24,636 - DEBUG - Call to Bot API endpoint `getUpdates` finished with return value `[]`
2025-03-29 19:17:24,636 - DEBUG - No new updates found.
2025-03-29 19:17:24,636 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 10, 'offset': 764461543}`
2025-03-29 19:17:24,637 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:24,637 - DEBUG - send_request_headers.complete
2025-03-29 19:17:24,637 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:24,637 - DEBUG - send_request_body.complete
2025-03-29 19:17:24,637 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:24,749 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:24,847 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:24,847 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:24,849 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:24,849 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:24,851 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:24,851 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:24,852 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:24,852 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:24,854 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:24,854 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:24,855 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:24,855 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:24,857 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:24,857 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:24,858 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:24,858 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:24,860 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:24,860 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:24,861 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:24,861 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:24,863 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:24,863 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:24,864 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:24,864 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:24,866 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:24,866 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:24,867 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:24,867 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:24,868 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:24,868 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:24,870 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:24,870 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:24,871 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:24,871 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:24,872 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:24,872 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:24,874 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:24,874 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:24,875 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:24,875 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:24,876 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:24,876 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:24,877 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:24,877 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:24,878 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:24,878 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:24,880 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:24,880 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:24,881 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:24,881 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:24,882 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:24,882 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:24,883 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:24,883 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:24,884 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:24,884 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:24,885 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:24,885 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:24,887 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:24,887 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:24,888 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:24,888 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:24,889 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:24,889 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:24,890 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:24,890 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:24,891 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:24,891 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:24,892 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:24,892 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:24,893 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:24,893 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:24,893 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:24,893 - INFO - Found free slots: [datetime.datetime(2025, 3, 10, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 10, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 10, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 10, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:24,894 - DEBUG - Day 10 status: ✅
2025-03-29 19:17:24,894 - INFO - Finding free slots for date: 2025-03-11
2025-03-29 19:17:24,894 - DEBUG - Asynchronously getting busy slots for date: 2025-03-11
2025-03-29 19:17:24,894 - INFO - Getting busy slots for date: 2025-03-11
2025-03-29 19:17:24,894 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:25,120 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:25,207 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:25,276 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:25,433 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:25,434 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:25,561 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:25,662 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:25,662 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:25,664 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:25,665 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:25,666 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:25,666 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:25,668 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:25,668 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:25,670 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:25,670 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:25,671 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:25,671 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:25,673 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:25,673 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:25,674 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:25,674 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:25,676 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:25,676 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:25,677 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:25,677 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:25,679 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:25,679 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:25,680 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:25,680 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:25,681 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:25,681 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:25,683 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:25,683 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:25,684 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:25,684 - DEBUG - Application received stop signal. Shutting down.
2025-03-29 19:17:25,684 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:25,686 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:25,686 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:25,687 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:25,687 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:25,688 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:25,688 - DEBUG - Stopping Updater
2025-03-29 19:17:25,688 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:25,688 - DEBUG - Waiting background polling task to finish up.
2025-03-29 19:17:25,690 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:25,690 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:25,691 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:25,691 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:25,692 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:25,692 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:25,693 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:25,693 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:25,695 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:25,695 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:25,696 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:25,696 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:25,697 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:25,697 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:25,698 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:25,698 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:25,699 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:25,699 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:25,700 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:25,700 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:25,702 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:25,702 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:25,703 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:25,703 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:25,704 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:25,704 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:25,705 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:25,705 - DEBUG - Network Retry Loop (Polling Updates): Cancelled
2025-03-29 19:17:25,705 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:25,706 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:25,706 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:25,707 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:25,707 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:25,708 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:25,708 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:25,709 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:25,710 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:25,710 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:25,710 - DEBUG - receive_response_headers.failed exception=CancelledError()
2025-03-29 19:17:25,710 - DEBUG - response_closed.started
2025-03-29 19:17:25,710 - DEBUG - Calling `get_updates` one more time to mark all fetched updates as read.
2025-03-29 19:17:25,710 - DEBUG - Calling Bot API endpoint `getUpdates` with parameters `{'timeout': 0, 'offset': 764461543}`
2025-03-29 19:17:25,710 - INFO - Found free slots: [datetime.datetime(2025, 3, 11, 10, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 11, 13, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 11, 16, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>), datetime.datetime(2025, 3, 11, 19, 0, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+3:00:00 STD>)]
2025-03-29 19:17:25,710 - DEBUG - Day 11 status: ✅
2025-03-29 19:17:25,710 - INFO - Finding free slots for date: 2025-03-12
2025-03-29 19:17:25,710 - DEBUG - Asynchronously getting busy slots for date: 2025-03-12
2025-03-29 19:17:25,710 - INFO - Getting busy slots for date: 2025-03-12
2025-03-29 19:17:25,711 - DEBUG - response_closed.complete
2025-03-29 19:17:25,711 - DEBUG - connect_tcp.started host='api.telegram.org' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-29 19:17:25,711 - DEBUG - Starting new HTTPS connection (1): caldav.yandex.ru:443
2025-03-29 19:17:25,737 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104a66fd0>
2025-03-29 19:17:25,737 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1049decc0> server_hostname='api.telegram.org' timeout=5.0
2025-03-29 19:17:25,851 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x104c7b0b0>
2025-03-29 19:17:25,851 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-29 19:17:25,851 - DEBUG - send_request_headers.complete
2025-03-29 19:17:25,851 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-29 19:17:25,851 - DEBUG - send_request_body.complete
2025-03-29 19:17:25,851 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-29 19:17:25,960 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 401 None
2025-03-29 19:17:26,038 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND / HTTP/1.1" 207 332
2025-03-29 19:17:26,121 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /principals/users/isheiko%40yandex.ru/ HTTP/1.1" 207 392
2025-03-29 19:17:26,232 - DEBUG - https://caldav.yandex.ru:443 "PROPFIND /calendars/isheiko%40yandex.ru/ HTTP/1.1" 207 1793
2025-03-29 19:17:26,233 - INFO - DEPRECATION NOTICE: The calendar.date_search method may be removed in release 2.0 of the caldav library.  Use calendar.search instead
2025-03-29 19:17:26,351 - DEBUG - https://caldav.yandex.ru:443 "REPORT /calendars/isheiko%40yandex.ru/events-32804107/ HTTP/1.1" 207 145481
2025-03-29 19:17:26,456 - DEBUG - Parsing datetime: 2025-03-24 18:00:00+03:00
2025-03-29 19:17:26,456 - DEBUG - Parsing datetime: 2025-03-24 21:00:00+03:00
2025-03-29 19:17:26,458 - DEBUG - Parsing datetime: 2025-04-17 00:00:00+03:00
2025-03-29 19:17:26,458 - DEBUG - Parsing datetime: 2025-04-17 23:00:00+03:00
2025-03-29 19:17:26,459 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:26,459 - DEBUG - Parsing datetime: 2025-03-22 16:00:00+03:00
2025-03-29 19:17:26,461 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:26,461 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:26,463 - DEBUG - Parsing datetime: 2025-03-22 10:00:00+03:00
2025-03-29 19:17:26,463 - DEBUG - Parsing datetime: 2025-03-22 13:00:00+03:00
2025-03-29 19:17:26,465 - DEBUG - Parsing datetime: 2025-04-03 00:00:00+03:00
2025-03-29 19:17:26,465 - DEBUG - Parsing datetime: 2025-04-03 23:00:00+03:00
2025-03-29 19:17:26,467 - DEBUG - Parsing datetime: 2025-04-08 00:00:00+03:00
2025-03-29 19:17:26,467 - DEBUG - Parsing datetime: 2025-04-08 23:00:00+03:00
2025-03-29 19:17:26,468 - DEBUG - Parsing datetime: 2025-04-10 00:00:00+03:00
2025-03-29 19:17:26,468 - DEBUG - Parsing datetime: 2025-04-10 23:00:00+03:00
2025-03-29 19:17:26,470 - DEBUG - Parsing datetime: 2025-04-05 00:00:00+03:00
2025-03-29 19:17:26,470 - DEBUG - Parsing datetime: 2025-04-05 23:00:00+03:00
2025-03-29 19:17:26,471 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:26,471 - DEBUG - Parsing datetime: 2025-03-31 15:30:00+03:00
2025-03-29 19:17:26,473 - DEBUG - Parsing datetime: 2025-03-28 10:00:00+03:00
2025-03-29 19:17:26,473 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:26,474 - DEBUG - Parsing datetime: 2025-03-28 13:00:00+03:00
2025-03-29 19:17:26,474 - DEBUG - Parsing datetime: 2025-03-28 16:00:00+03:00
2025-03-29 19:17:26,476 - DEBUG - Parsing datetime: 2025-04-16 00:00:00+03:00
2025-03-29 19:17:26,476 - DEBUG - Parsing datetime: 2025-04-16 23:00:00+03:00
2025-03-29 19:17:26,477 - DEBUG - Parsing datetime: 2025-04-14 00:00:00+03:00
2025-03-29 19:17:26,477 - DEBUG - Parsing datetime: 2025-04-14 23:00:00+03:00
2025-03-29 19:17:26,478 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:26,478 - DEBUG - Parsing datetime: 2025-03-28 20:30:00+03:00
2025-03-29 19:17:26,480 - DEBUG - Parsing datetime: 2025-04-11 00:00:00+03:00
2025-03-29 19:17:26,480 - DEBUG - Parsing datetime: 2025-04-11 23:00:00+03:00
2025-03-29 19:17:26,481 - DEBUG - Parsing datetime: 2025-04-06 00:00:00+03:00
2025-03-29 19:17:26,481 - DEBUG - Parsing datetime: 2025-04-06 23:00:00+03:00
2025-03-29 19:17:26,482 - DEBUG - Parsing datetime: 2025-04-01 00:00:00+03:00
2025-03-29 19:17:26,482 - DEBUG - Parsing datetime: 2025-04-01 23:30:00+03:00
2025-03-29 19:17:26,483 - DEBUG - Parsing datetime: 2025-04-07 00:00:00+03:00
2025-03-29 19:17:26,483 - DEBUG - Parsing datetime: 2025-04-07 23:00:00+03:00
2025-03-29 19:17:26,485 - DEBUG - Parsing datetime: 2025-04-15 00:00:00+03:00
2025-03-29 19:17:26,485 - DEBUG - Parsing datetime: 2025-04-15 23:00:00+03:00
2025-03-29 19:17:26,486 - DEBUG - Parsing datetime: 2025-03-28 17:00:00+03:00
2025-03-29 19:17:26,486 - DEBUG - Parsing datetime: 2025-03-28 20:00:00+03:00
2025-03-29 19:17:26,487 - DEBUG - Parsing datetime: 2025-04-24 10:00:00+03:00
2025-03-29 19:17:26,487 - DEBUG - Parsing datetime: 2025-04-24 10:30:00+03:00
2025-03-29 19:17:26,488 - DEBUG - Parsing datetime: 2025-03-31 09:30:00+03:00
2025-03-29 19:17:26,488 - DEBUG - Parsing datetime: 2025-03-31 12:30:00+03:00
2025-03-29 19:17:26,490 - DEBUG - Parsing datetime: 2025-03-26 16:00:00+03:00
2025-03-29 19:17:26,490 - DEBUG - Parsing datetime: 2025-03-26 22:30:00+03:00
2025-03-29 19:17:26,491 - DEBUG - Parsing datetime: 2025-03-27 19:00:00+03:00
2025-03-29 19:17:26,491 - DEBUG - Parsing datetime: 2025-03-27 22:00:00+03:00
2025-03-29 19:17:26,492 - DEBUG - Parsing datetime: 2025-04-04 00:00:00+03:00
2025-03-29 19:17:26,492 - DEBUG - Parsing datetime: 2025-04-04 23:00:00+03:00
2025-03-29 19:17:26,493 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:26,493 - DEBUG - Parsing datetime: 2025-03-23 17:00:00+03:00
2025-03-29 19:17:26,494 - DEBUG - Parsing datetime: 2025-03-29 13:00:00+03:00
2025-03-29 19:17:26,494 - DEBUG - Parsing datetime: 2025-03-29 13:30:00+03:00
2025-03-29 19:17:26,495 - DEBUG - Parsing datetime: 2025-03-29 10:00:00+03:00
2025-03-29 19:17:26,495 - DEBUG - Parsing datetime: 2025-03-29 10:30:00+03:00
2025-03-29 19:17:26,497 - DEBUG - Parsing datetime: 2025-03-23 11:00:00+03:00
2025-03-29 19:17:26,497 - DEBUG - Parsing datetime: 2025-03-23 14:00:00+03:00
2025-03-29 19:17:26,498 - DEBUG - Parsing datetime: 2025-04-12 00:00:00+03:00
2025-03-29 19:17:26,498 - DEBUG - Parsing datetime: 2025-04-12 23:00:00+03:00
2025-03-29 19:17:26,499 - DEBUG - Parsing datetime: 2025-04-19 10:00:00+03:00
2025-03-29 19:17:26,499 - DEBUG - Parsing datetime: 2025-04-19 10:30:00+03:00
2025-03-29 19:17:26,500 - DEBUG - Parsing datetime: 2025-04-09 00:00:00+03:00
2025-03-29 19:17:26,500 - DEBUG - Parsing datetime: 2025-04-09 23:00:00+03:00
2025-03-29 19:17:26,501 - DEBUG - Parsing datetime: 2025-04-13 00:00:00+03:00
2025-03-29 19:17:26,501 - DEBUG - Parsing datetime: 2025-04-13 23:00:00+03:00
2025-03-29 19:17:26,502 - DEBUG - Parsing datetime: 2025-04-02 00:00:00+03:00
2025-03-29 19:17:26,502 - DEBUG - Parsing datetime: 2025-04-02 23:30:00+03:00
2025-03-29 19:17:26,503 - DEBUG - Parsing datetime: 2025-03-25 11:00:00+03:00
2025-03-29 19:17:26,503 - DEBUG - Parsing datetime: 2025-03-25 21:00:00+03:00
2025-03-29 19:17:26,503 - INFO - Found busy slots: [(datetime.datetime(2025, 3, 24, 18, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 24, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 17, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 17, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 22, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 22, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 3, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 3, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 8, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 8, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 10, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 10, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 5, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 5, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 15, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 16, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 14, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 14, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 11, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 11, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 6, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 6, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 1, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 7, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 7, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 15, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 15, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 28, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 28, 20, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 24, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 24, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 31, 9, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 31, 12, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 26, 16, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 26, 22, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 27, 19, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 27, 22, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 4, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 4, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 17, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 13, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 13, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 29, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 29, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 23, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 23, 14, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 12, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 12, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 19, 10, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 19, 10, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 9, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 9, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 13, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 13, 23, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 4, 2, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 4, 2, 23, 30, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow'))), (datetime.datetime(2025, 3, 25, 11, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')), datetime.datetime(2025, 3, 25, 21, 0, tzinfo=zoneinfo.ZoneInfo(key='Europe/Moscow')))]
2025-03-29 19:17:26,511 - ERROR - Task was destroyed but it is pending!
task: <Task pending name='Task-12' coro=<update_calendar_after_sync() running at /Users/aleksandrermilov/Documents/python/irina/glass/glass/main.py:303> wait_for=<Future pending cb=[_chain_future.<locals>._call_check_cancel() at /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/futures.py:384, Task.task_wakeup()]>>
